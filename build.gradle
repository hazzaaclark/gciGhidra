import org.apache.tools.ant.filters.ReplaceTokens

//----------------------START "DO NOT MODIFY" SECTION------------------------------
def ghidraInstallDir

if (System.env.GHIDRA_INSTALL_DIR) {
    ghidraInstallDir = System.env.GHIDRA_INSTALL_DIR
}
else if (project.hasProperty("GHIDRA_INSTALL_DIR")) {
    ghidraInstallDir = project.getProperty("GHIDRA_INSTALL_DIR")
}

if (ghidraInstallDir) {
    apply from: new File(ghidraInstallDir).getCanonicalPath() + "/support/buildExtension.gradle"
}
else {
    throw new GradleException("GHIDRA_INSTALL_DIR is not defined!")
}
//----------------------END "DO NOT MODIFY" SECTION-------------------------------

def DISTRIBUTION_DIR = file("distribution")
def PATH_IN_ZIP = "gdi"

archivesBaseName = "gdiGhidra"
version = "1.0"

task compileDreamcastExtension(type: JavaExec) {
    main = "gdi.DC_Base"
    classpath = sourceSets.main.runtimeClasspath
    jvmArgs = ['-Xmx2048M']
}

task cleanDreamcastExtension(type: Delete) {
    delete fileTree('build') {
        include '**/*.class'
    }
}

task buildDreamcastExtension(type: Zip) {
    from('src')
    archiveFileName = "${archivesBaseName}-${version}-Ghidra_${ghidra_version}".replace(' ', '_') + ".zip"
    dependsOn compileDreamcastExtension
}

clean.dependsOn(cleanDreamcastExtension)
build.dependsOn(compileDreamcastExtension, buildDreamcastExtension)
